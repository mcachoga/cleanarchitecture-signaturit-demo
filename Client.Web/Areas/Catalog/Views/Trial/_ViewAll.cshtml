@using Signaturit.Web.Areas.Catalog.Models
@model IEnumerable<TrialViewModel>
<table id="trialTable" class="table table-striped" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Defense</th>
            <th>Prosecutor</th>
            <th>Resolution</th>
            <th>Status</th>
            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Delete)).Result.Succeeded || (AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Edit)).Result.Succeeded)
            {
            <th>Actions</th>
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var trial in Model)
        {
        <tr>
            <td>
                @trial.Id
            </td>
            <td>
                @trial.Name
            </td>
            <td>
                @trial.Defense
            </td>
            <td>
                @trial.Prosecutor
            </td>
            <td>
                @trial.Result
            </td>
            <td>
                @if (trial.Status.ToLower().Equals("closed"))
                {
                    <span class="badge badge-success">@localizer["Closed"]</span> 
                }
                else if (trial.Status.ToLower().Equals("pending"))
                {
                    <span class="badge badge-danger">@localizer["Pending"]</span> 
                }
                else if (trial.Status.ToLower().Equals("tied"))
                {
                    <span class="badge badge-warning">@localizer["Tied"]</span> 
                }
                else if (trial.Status.ToLower().Equals("unstarted"))
                {
                    <span class="badge badge-secondary">@localizer["Unstarted"]</span>                
                }
                else
                {
                    @trial.Status
                }
                
            </td>
            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Delete)).Result.Succeeded || (AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Edit)).Result.Succeeded)
            {
        <td class="text-right">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Action
                </button>
                <div class="dropdown-menu shadow animated--grow-in">
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Edit)).Result.Succeeded)
                    {
        <a onclick="jQueryModalGet('/catalog/trial/OnGetCreateOrEdit?id=@trial.Id','Edit Trial')" class="dropdown-item"><i class="fas fa-pencil-alt"></i>  Edit</a>}
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Trials.Delete)).Result.Succeeded)

                    {
        <form id="form_delete_@trial.Id" asp-area="Catalog" asp-controller="Trial" method="post" asp-action="OnPostDelete" asp-route-id="@trial.Id" onsubmit="return jQueryModalDelete(this)">
            <a href="javascript:$('#form_delete_@trial.Id').submit();" class="dropdown-item"><i class="fas fa-trash-alt"></i>  Delete</a>
        </form>}
                </div>
            </div>
        </td>}
        </tr>
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $("#trialTable").DataTable();
    });
</script>
